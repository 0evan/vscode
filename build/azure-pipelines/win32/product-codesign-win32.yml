steps:
  - task: AzureKeyVault@1
    displayName: "Azure Key Vault: Get Secrets"
    inputs:
      azureSubscription: "vscode-builds-subscription"
      KeyVaultName: vscode

  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: Compilation
      path: $(Build.ArtifactStagingDirectory)
    displayName: Download compilation output

  - powershell: |
      . build/azure-pipelines/win32/exec.ps1
      $ErrorActionPreference = "Stop"
      exec { tar --force-local -xzf $(Build.ArtifactStagingDirectory)/compilation.tar.gz }
    displayName: Extract compilation output

  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: Windows-$(VSCODE_ARCH)
      path: $(Build.ArtifactStagingDirectory)
    displayName: Download build output

  - powershell: |
      . s/build/azure-pipelines/win32/exec.ps1
      $ErrorActionPreference = "Stop"
      exec { tar --force-local -xzf $(Build.ArtifactStagingDirectory)/windows.tar.gz }
    workingDirectory: $(Agent.BuildDirectory)
    displayName: Extract build output

  - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
    inputs:
      ConnectedServiceName: "ESRP CodeSign"
      FolderPath: "$(agent.builddirectory)/VSCode-win32-$(VSCODE_ARCH),$(agent.builddirectory)/vscode-reh-win32-$(VSCODE_ARCH)"
      Pattern: "*.dll,*.exe,*.node"
      signConfigType: inlineSignParams
      inlineOperation: |
        [
          {
            "keyCode": "CP-230012",
            "operationSetCode": "SigntoolSign",
            "parameters": [
              {
                "parameterName": "OpusName",
                "parameterValue": "VS Code"
              },
              {
                "parameterName": "OpusInfo",
                "parameterValue": "https://code.visualstudio.com/"
              },
              {
                "parameterName": "Append",
                "parameterValue": "/as"
              },
              {
                "parameterName": "FileDigest",
                "parameterValue": "/fd \"SHA256\""
              },
              {
                "parameterName": "PageHash",
                "parameterValue": "/NPH"
              },
              {
                "parameterName": "TimeStamp",
                "parameterValue": "/tr \"http://rfc3161.gtm.corp.microsoft.com/TSS/HttpTspServer\" /td sha256"
              }
            ],
            "toolName": "sign",
            "toolVersion": "1.0"
          },
          {
            "keyCode": "CP-230012",
            "operationSetCode": "SigntoolVerify",
            "parameters": [
              {
                "parameterName": "VerifyAll",
                "parameterValue": "/all"
              }
            ],
            "toolName": "sign",
            "toolVersion": "1.0"
          }
        ]
      SessionTimeout: 120
    # condition: and(succeeded(), ne(variables['VSCODE_PUBLISH'], 'false'))

  - task: NuGetCommand@2
    displayName: Install ESRPClient.exe
    inputs:
      restoreSolution: 'build\azure-pipelines\win32\ESRPClient\packages.config'
      feedsToUse: config
      nugetConfigPath: 'build\azure-pipelines\win32\ESRPClient\NuGet.config'
      externalFeedCredentials: "ESRP Nuget"
      restoreDirectory: packages
    # condition: and(succeeded(), ne(variables['VSCODE_PUBLISH'], 'false'))

  - task: ESRPImportCertTask@1
    displayName: Import ESRP Request Signing Certificate
    inputs:
      ESRP: "ESRP CodeSign"
    # condition: and(succeeded(), ne(variables['VSCODE_PUBLISH'], 'false'))

  - task: PowerShell@2
    inputs:
      targetType: filePath
      filePath: .\build\azure-pipelines\win32\import-esrp-auth-cert.ps1
      arguments: "$(ESRP-SSL-AADAuth)"
    displayName: Import ESRP Auth Certificate
    # condition: and(succeeded(), ne(variables['VSCODE_PUBLISH'], 'false'))

  # - powershell: |
  #     . build/azure-pipelines/win32/exec.ps1
  #     $ErrorActionPreference = "Stop"
  #     $env:AZURE_STORAGE_ACCESS_KEY_2 = "$(vscode-storage-key)"
  #     $env:AZURE_DOCUMENTDB_MASTERKEY = "$(builds-docdb-key-readwrite)"
  #     $env:VSCODE_MIXIN_PASSWORD="$(github-distro-mixin-password)"
  #     .\build\azure-pipelines\win32\publish.ps1
  #   displayName: Publish
  #   condition: and(succeeded(), ne(variables['VSCODE_PUBLISH'], 'false'))
